version: "3.9"

networks:
  my_app_network:
    driver: bridge


services:
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
      - "9095:9095"
    networks:
      - my_app_network
    environment:
      KAFKA_ENABLE_KRAFT: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL_HOST://:9095
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,EXTERNAL_HOST://kafka:9095
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL_HOST:PLAINTEXT

      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_KRAFT_CLUSTER_ID: dRHqujI7QqCYGpd01Hl5HQ
      KAFKA_CFG_ADVERTISED_HOST_NAME: kafka
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list" ]
      start_period: 20s
      interval: 15s
  kafka-init:
    image: 'bitnami/kafka:latest'
    working_dir: /opt/bitnami/kafka/bin
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/bash' ]
    networks:
      - my_app_network
    command: |
      kafka-topics.sh --create --topic events  --partitions 3 --replication-factor 1 --bootstrap-server kafka:9095 --if-not-exists
  ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8080:8080"
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9095
      KAFKA_CLUSTERS_0_NAME: kraft
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - my_app_network
  clickhouse:
    image: clickhouse/clickhouse-server:head
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "clickhouse-client", "--query", "select 1 from default.events" ]
      start_period: 10s
      interval: 15s
    networks:
      - my_app_network
    volumes:
      - ./init/clickhouse/create_events_table.sql:/docker-entrypoint-initdb.d/create_events_table.sql
      - ./init/clickhouse/create_kafka_events_table.sql:/docker-entrypoint-initdb.d/create_kafka_events_table.sql
      - ./init/clickhouse/create_mv_events_queue.sql:/docker-entrypoint-initdb.d/create_mv_events_queue.sql
  kcpf:
    build: .
    container_name: kcpf
    ports:
      - "9090:9090"
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - my_app_network
