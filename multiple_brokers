

https://github.com/bitnami/containers/blob/main/bitnami/kafka/docker-compose-cluster.yml



version: "3.9"

networks:
  my_app_network:
    driver: bridge


services:
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
      - "9095:9095"
      - "29092:29092"
    networks:
      - my_app_network
    environment:
      #      KAFKA_ENABLE_KRAFT: 1
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_KRAFT_CLUSTER_ID: dRHqujI7QqCYGpd01Hl5HQ
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,UI_HOST://:9095,INIT_CONTROLLER://:29092,CH_HOST://:9099
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,UI_HOST:PLAINTEXT,INIT_CONTROLLER:PLAINTEXT,CH_HOST:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,CH_HOST://kafka:9099,UI_HOST://host.docker.internal:9095,INIT_CONTROLLER://host.docker.internal:29092 # INIT_CONTROLLER://host.docker.internal:29092 - do I need this?

      KAFKA_CFG_BROKER_ID: 1

      KAFKA_CFG_ADVERTISED_HOST_NAME: kafka
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list" ]
      start_period: 20s
      interval: 15s
  ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: host.docker.internal:9095
      KAFKA_CLUSTERS_0_NAME: kraft
    depends_on:
      kafka:
        condition: service_healthy
  kafka-init:
    image: 'bitnami/kafka:latest'
    working_dir: /opt/bitnami/kafka/bin
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/bash' ]
    networks:
      - my_app_network
    command: |
      kafka-topics.sh --create --topic events --partitions 3 --replication-factor 1 --bootstrap-server kafka:29092
  clickhouse:
    image: clickhouse/clickhouse-server:head
    container_name: clickhouse
    ports:
      - "8123:8123"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - my_app_network
    environment:
      CLICKHOUSE_ALWAYS_RUN_INITDB_SCRIPTS: true
    volumes:
      # https://github.com/ClickHouse/ClickHouse/issues/60025 - issue with docker-entrypoint-initdb.d. Fixed in: https://github.com/ClickHouse/ClickHouse/pull/59991.
      - ./init/clickhouse/create_events_table.sql:/docker-entrypoint-initdb.d/create_events_table.sql
      - ./init/clickhouse/create_kafka_events_table.sql:/docker-entrypoint-initdb.d/create_kafka_events_table.sql
      - ./init/clickhouse/create_mv_events_queue.sql:/docker-entrypoint-initdb.d/create_mv_events_queue.sql
      - ./containers_configs/clickhouse/config.xml:/etc/clickhouse-server/config.xml
